security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\PasswordAuthenticator
                    - App\Security\GoogleAuthenticator
                entry_point: App\Security\PasswordAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/signup', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/reset-password', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/p/*', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/admin', roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: '^/', roles: 'ROLE_USER' }

