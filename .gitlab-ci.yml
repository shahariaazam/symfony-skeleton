# Select what we should cache
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

services:
  - mysql:5.7

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_ROOT_PASSWORD: symfony
  MYSQL_DATABASE: symfony
  MYSQL_USER: symfony
  MYSQL_PASSWORD: symfony

build:
  image: docker:19.03.1
  stage: build
  services:
    - docker:19.03.1-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f ./docker/symfony/Dockerfile .
    - docker push $IMAGE_TAG

test:
  image: php:7.4-cli-alpine
  variables:
    APP_NAME: "Symfony Dashboard"
    KERNEL_CLASS: "App\\Kernel"
    APP_SECRET: "$ecretf0rt3st"
    SYMFONY_DEPRECATIONS_HELPER: "999999"
    PANTHER_APP_ENV: "panther"
    DATABASE_URL: "mysql://symfony:symfony@mysql:3306/symfony?serverVersion=5.7"
    GOOGLE_OAUTH2_CLIENT_ID: "xxxxxxxx"
    GOOGLE_OAUTH2_CLIENT_SECRET: "xxxxxxx"
  script:
    # Install git, the php image doesn't have installed
    - apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS
    - apk add git libintl icu icu-dev
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - docker-php-ext-configure intl --enable-intl
    - docker-php-ext-install pdo pdo_mysql intl
    - rm -rf /usr/share/php
    - rm -rf /tmp/*
    - apk del  .phpize-deps

    # Install composer
    - curl --show-error --silent https://getcomposer.org/installer | php

    # Install all project dependencies
    - php composer.phar install

    # Run PHPUnit
    - ./bin/phpunit --configuration phpunit.xml.dist --coverage-text --colors=never
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'